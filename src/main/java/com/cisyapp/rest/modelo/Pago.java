package com.cisyapp.rest.modelo;
// Generated 05-may-2020 17:39:03 by Hibernate Tools 5.2.12.Final

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Pago generated by hbm2java
 */
@Entity
@Table(name = "pago", catalog = "cisy")
public class Pago implements java.io.Serializable {

	private PagoId id;
	private Usuario usuarioByIdusuarioconductor;
	private Usuario usuarioByIdusuariopasajero;
	private Integer cantidad;
	private Date fechapago;

	public Pago() {
	}

	public Pago(PagoId id, Usuario usuarioByIdusuarioconductor, Usuario usuarioByIdusuariopasajero, Date fechapago) {
		this.id = id;
		this.usuarioByIdusuarioconductor = usuarioByIdusuarioconductor;
		this.usuarioByIdusuariopasajero = usuarioByIdusuariopasajero;
		this.fechapago = fechapago;
	}

	public Pago(PagoId id, Usuario usuarioByIdusuarioconductor, Usuario usuarioByIdusuariopasajero, Integer cantidad,
			Date fechapago) {
		this.id = id;
		this.usuarioByIdusuarioconductor = usuarioByIdusuarioconductor;
		this.usuarioByIdusuariopasajero = usuarioByIdusuariopasajero;
		this.cantidad = cantidad;
		this.fechapago = fechapago;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "idpago", column = @Column(name = "idpago", nullable = false)),
			@AttributeOverride(name = "idusuariopasajero", column = @Column(name = "idusuariopasajero", nullable = false)),
			@AttributeOverride(name = "idusuarioconductor", column = @Column(name = "idusuarioconductor", nullable = false)) })
	public PagoId getId() {
		return this.id;
	}

	public void setId(PagoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idusuarioconductor", nullable = false, insertable = false, updatable = false)
	public Usuario getUsuarioByIdusuarioconductor() {
		return this.usuarioByIdusuarioconductor;
	}

	public void setUsuarioByIdusuarioconductor(Usuario usuarioByIdusuarioconductor) {
		this.usuarioByIdusuarioconductor = usuarioByIdusuarioconductor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idusuariopasajero", nullable = false, insertable = false, updatable = false)
	public Usuario getUsuarioByIdusuariopasajero() {
		return this.usuarioByIdusuariopasajero;
	}

	public void setUsuarioByIdusuariopasajero(Usuario usuarioByIdusuariopasajero) {
		this.usuarioByIdusuariopasajero = usuarioByIdusuariopasajero;
	}

	@Column(name = "cantidad")
	public Integer getCantidad() {
		return this.cantidad;
	}

	public void setCantidad(Integer cantidad) {
		this.cantidad = cantidad;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechapago", nullable = false, length = 19)
	public Date getFechapago() {
		return this.fechapago;
	}

	public void setFechapago(Date fechapago) {
		this.fechapago = fechapago;
	}

}
