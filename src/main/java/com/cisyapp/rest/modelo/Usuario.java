package com.cisyapp.rest.modelo;
// Generated 28-may-2020 20:41:23 by Hibernate Tools 5.2.12.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", catalog = "cisy", uniqueConstraints = { @UniqueConstraint(columnNames = "email"),
		@UniqueConstraint(columnNames = "telefono") })
public class Usuario implements java.io.Serializable {

	private Integer idusuario;
	@NotNull	
	@Size(min=1, max=20)
	@Pattern(regexp = "[a-z A-ZñáéíóúÑÁÉÍÓÚ]+", message="El nombre solo puede estar formado por letras")
	private String nombre;
	@NotNull	
	@Size(min=1, max=20)
	@Pattern(regexp = "[a-z A-ZñáéíóúÑÁÉÍÓÚ]+", message="El nombre solo puede estar formado por letras")
	private String apellidos;
	private Boolean espasajero;
	private Boolean esconductor;
	private Integer telefono;
	@NotNull
	@Size(max=30)
	@Email(message="Introduzca un formato de correo válido")
	private String email;
	@NotNull
	@Size(min=6, max=30)
	@Pattern(regexp = "[a-zA-Z0-9]+", message="la clave no admite caracteres especiales")
	private String clave;
	private Date fechanacimiento;
	private String fotousuario;
	private String descripcion;
	private Date fecharegistro;
	private Date fechadesconexion;
	private Boolean sesioniniciada;
	private Set<Vehiculo> vehiculos = new HashSet<Vehiculo>(0);
	private Set<Reserva> reservas = new HashSet<Reserva>(0);
	private Set<Viaje> viajes = new HashSet<Viaje>(0);
	private Set<Pago> pagosForIdusuarioconductor = new HashSet<Pago>(0);
	private Set<Pago> pagosForIdusuariopasajero = new HashSet<Pago>(0);

	public Usuario() {
	}

	public Usuario(String nombre, String apellidos, String email, String clave, Date fecharegistro) {
		this.nombre = nombre;
		this.apellidos = apellidos;
		this.email = email;
		this.clave = clave;
		this.fecharegistro = fecharegistro;
	}

	public Usuario(String nombre, String apellidos, Boolean espasajero, Boolean esconductor, Integer telefono,
			String email, String clave, Date fechanacimiento, String fotousuario, String descripcion,
			Date fecharegistro, Date fechadesconexion, Boolean sesioniniciada, Set<Vehiculo> vehiculos,
			Set<Reserva> reservas, Set<Viaje> viajes, Set<Pago> pagosForIdusuarioconductor,
			Set<Pago> pagosForIdusuariopasajero) {
		this.nombre = nombre;
		this.apellidos = apellidos;
		this.espasajero = espasajero;
		this.esconductor = esconductor;
		this.telefono = telefono;
		this.email = email;
		this.clave = clave;
		this.fechanacimiento = fechanacimiento;
		this.fotousuario = fotousuario;
		this.descripcion = descripcion;
		this.fecharegistro = fecharegistro;
		this.fechadesconexion = fechadesconexion;
		this.sesioniniciada = sesioniniciada;
		this.vehiculos = vehiculos;
		this.reservas = reservas;
		this.viajes = viajes;
		this.pagosForIdusuarioconductor = pagosForIdusuarioconductor;
		this.pagosForIdusuariopasajero = pagosForIdusuariopasajero;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idusuario", unique = true, nullable = false)
	public Integer getIdusuario() {
		return this.idusuario;
	}

	public void setIdusuario(Integer idusuario) {
		this.idusuario = idusuario;
	}

	@Column(name = "nombre", nullable = false, length = 20)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "apellidos", nullable = false, length = 20)
	public String getApellidos() {
		return this.apellidos;
	}

	public void setApellidos(String apellidos) {
		this.apellidos = apellidos;
	}

	@Column(name = "espasajero")
	public Boolean getEspasajero() {
		return this.espasajero;
	}

	public void setEspasajero(Boolean espasajero) {
		this.espasajero = espasajero;
	}

	@Column(name = "esconductor")
	public Boolean getEsconductor() {
		return this.esconductor;
	}

	public void setEsconductor(Boolean esconductor) {
		this.esconductor = esconductor;
	}

	@Column(name = "telefono", unique = true)
	public Integer getTelefono() {
		return this.telefono;
	}

	public void setTelefono(Integer telefono) {
		this.telefono = telefono;
	}

	@Column(name = "email", unique = true, nullable = false, length = 30)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "clave", nullable = false, length = 30)
	public String getClave() {
		return this.clave;
	}

	public void setClave(String clave) {
		this.clave = clave;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fechanacimiento", length = 10)
	public Date getFechanacimiento() {
		return this.fechanacimiento;
	}

	public void setFechanacimiento(Date fechanacimiento) {
		this.fechanacimiento = fechanacimiento;
	}

	@Column(name = "fotousuario", length = 500)
	public String getFotousuario() {
		return this.fotousuario;
	}

	public void setFotousuario(String fotousuario) {
		this.fotousuario = fotousuario;
	}

	@Column(name = "descripcion", length = 300)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecharegistro", nullable = false, length = 19)
	public Date getFecharegistro() {
		return this.fecharegistro;
	}

	public void setFecharegistro(Date fecharegistro) {
		this.fecharegistro = fecharegistro;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechadesconexion", length = 19)
	public Date getFechadesconexion() {
		return this.fechadesconexion;
	}

	public void setFechadesconexion(Date fechadesconexion) {
		this.fechadesconexion = fechadesconexion;
	}

	@Column(name = "sesioniniciada")
	public Boolean getSesioniniciada() {
		return this.sesioniniciada;
	}

	public void setSesioniniciada(Boolean sesioniniciada) {
		this.sesioniniciada = sesioniniciada;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Vehiculo> getVehiculos() {
		return this.vehiculos;
	}

	public void setVehiculos(Set<Vehiculo> vehiculos) {
		this.vehiculos = vehiculos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Reserva> getReservas() {
		return this.reservas;
	}

	public void setReservas(Set<Reserva> reservas) {
		this.reservas = reservas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Viaje> getViajes() {
		return this.viajes;
	}

	public void setViajes(Set<Viaje> viajes) {
		this.viajes = viajes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdusuarioconductor")
	public Set<Pago> getPagosForIdusuarioconductor() {
		return this.pagosForIdusuarioconductor;
	}

	public void setPagosForIdusuarioconductor(Set<Pago> pagosForIdusuarioconductor) {
		this.pagosForIdusuarioconductor = pagosForIdusuarioconductor;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdusuariopasajero")
	public Set<Pago> getPagosForIdusuariopasajero() {
		return this.pagosForIdusuariopasajero;
	}

	public void setPagosForIdusuariopasajero(Set<Pago> pagosForIdusuariopasajero) {
		this.pagosForIdusuariopasajero = pagosForIdusuariopasajero;
	}

}
